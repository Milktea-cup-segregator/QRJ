import RPi.GPIO as GPIO
import pyaudio
import numpy as np
import wave

# 设置GPIO编码方式为BOARD
GPIO.setmode(GPIO.BOARD)

# 定义LED引脚 (这里使用第12号引脚)
led_pin = 12

# 设置LED引脚为输出
GPIO.setup(led_pin, GPIO.OUT)

# 创建PWM对象，频率为100Hz
pwm = GPIO.PWM(led_pin, 100)

# 启动PWM，并设置初始占空比为0%
pwm.start(0)

# 设置音频参数
CHUNK = 1024
FORMAT = pyaudio.paInt16
CHANNELS = 1
RATE = 44100

def record_audio():
    stream = pyaudio.PyAudio().open(format=FORMAT,
                                channels=CHANNELS,
                                rate=RATE,
                                input=True,
                                frames_per_buffer=CHUNK)
    
    print("开始录音...")
    
    frames = []
    
    # 录制音频并将数据存储在frames列表中
    while True:
        data = stream.read(CHUNK)
        frames.append(data)
        # 将输入数据转换为numpy数组
        audio_data = np.frombuffer(data, dtype=np.int16)
        # 计算音频的平均值
        avg = np.average(np.abs(audio_data))
        # 使LED闪烁的亮度取决于音频平均值
        duty_cycle = int(avg / 32767 * 100)
        pwm.ChangeDutyCycle(duty_cycle)
    
    print("录音结束...")
    
    # 停止PWM
    pwm.stop()
    
    # 清理GPIO设置
    GPIO.cleanup()
    
    # 将录制的音频写入到WAV文件中
    wf = wave.open("recording.wav", "wb")
    wf.setnchannels(CHANNELS)
    wf.setsampwidth(pyaudio.PyAudio().get_sample_size(FORMAT))
    wf.setframerate(RATE)
    wf.writeframes(b"".join(frames))
    wf.close()

try:
    record_audio()
except KeyboardInterrupt:
    pass
